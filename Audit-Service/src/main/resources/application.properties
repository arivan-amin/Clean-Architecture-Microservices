spring.application.name = audit-service
server.port = 17001

# ===================================
# BANNER PROPERTIES
# ===================================
project-name = @project.parent.artifactId@
service-name = @project.artifactId@
service-version = @project.version@

# ===================================
# EUREKA
# ===================================
eureka.client.serviceUrl.defaultZone = http://${EUREKA_USER}:${EUREKA_PASSWORD}@${EUREKA_HOST:localhost}:8761/eureka

# ===================================
# OBSERVABILITY
# ===================================
info.app.name = Audit Service
info.app.description = Audit Service
info.app.version = 1.0
management.observations.key-values.application = ${spring.application.name}
management.endpoints.web.exposure.include = *
management.tracing.sampling.probability = 1.0
management.info.build.enabled = true
management.info.git.enabled = true
management.info.env.enabled = true
management.endpoint.health.show-details = always
management.metrics.distribution.percentiles-histogram.http.server.requests = true
server.tomcat.mbeanregistry.enabled = true
management.endpoint.health.probes.enabled = true

# ===================================
# MYSQL
# ===================================
spring.datasource.url = jdbc:mysql://${MYSQL_HOST:localhost}:3306/${DATABASE_NAME:scm_backend_database}
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto = validate
spring.datasource.username = ${MYSQL_USERNAME:root}
spring.datasource.password = ${MYSQL_PASSWORD:mysql}
spring.jpa.open-in-view = false

# ===================================
# HIKARI CONNECTION POOL SETTINGS
# ===================================
spring.datasource.hikari.minimum-idle = 5
spring.datasource.hikari.maximum-pool-size = 10
spring.datasource.hikari.max-lifetime = 1800000
spring.datasource.hikari.connection-timeout = 30000
spring.datasource.hikari.idle-timeout = 300000
spring.datasource.hikari.leak-detection-threshold = 15000
spring.datasource.hikari.pool-name = HikariCP-LocalProd
spring.datasource.hikari.validation-timeout = 5000

# ===================================
# KAFKA PRODUCER
# ===================================
spring.kafka.producer.bootstrap-servers = ${KAFKA_BROKER_SERVER:localhost}:${KAFKA_BROKER_PORT:9092}
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.metadata.max.age.ms = 1000
spring.kafka.producer.metadata.max.idle.ms = 5000
spring.kafka.producer.max-block-ms = 1000
spring.kafka.producer.delivery-timeout-ms = 1000
spring.kafka.producer.request-timeout-ms = 1000
spring.kafka.producer.retries = 0

# ===================================
# KAFKA CONSUMER
# ===================================
spring.kafka.consumer.bootstrap-servers = ${KAFKA_BROKER_SERVER:localhost}:${KAFKA_BROKER_PORT:9092}
spring.kafka.consumer.group-id = event-group
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages = *
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.properties.reconnect.backoff.ms = 5000
spring.kafka.properties.reconnect.backoff.max.ms = 5000
