spring.application.name = api-gateway
server.port = 8080

#Eureka
eureka.client.serviceUrl.defaultZone = http://${EUREKA_USER}:${EUREKA_PASSWORD}@${EUREKA_HOST:localhost}:8761/eureka

# Observability
info.app.name=API Gateway
info.app.description=API Gateway Service
info.app.version=1.0
management.observations.key-values.application=backend-api-gateway
management.endpoints.web.exposure.include=*
management.tracing.sampling.probability=1.0
management.info.build.enabled=true
management.info.git.enabled=true
management.info.env.enabled=true
management.endpoint.health.show-details=always
management.metrics.distribution.percentiles-histogram.http.server.requests=true



# Discover Server Route
spring.cloud.gateway.routes[0].id = discovery-server
spring.cloud.gateway.routes[0].uri = http://${EUREKA_HOST:localhost}:8761
spring.cloud.gateway.routes[0].predicates[0] = Path=/eureka/web
spring.cloud.gateway.routes[0].filters[0] = SetPath=/

# Discover Server Static Resources Route
spring.cloud.gateway.routes[1].id = discovery-server-static
spring.cloud.gateway.routes[1].uri = http://${EUREKA_HOST:localhost}:8761
spring.cloud.gateway.routes[1].predicates[0] = Path=/eureka/**

# Swagger UI aggregate setup
spring.main.web-application-type = reactive
springdoc.api-docs.enabled = true
springdoc.swagger-ui.enabled = true
springdoc.swagger-ui.path = /swagger-ui.html

# Backend Appointment Service Routes
# Swagger
springdoc.swagger-ui.urls[0].name = Backend Appointment Service
springdoc.swagger-ui.urls[0].url = /backend-appointment-service/api-docs
spring.cloud.gateway.routes[2].id = backend-appointment-service-open-api
spring.cloud.gateway.routes[2].uri = lb://backend-appointment-service
spring.cloud.gateway.routes[2].predicates[0] = Path=/backend-appointment-service/api-docs
# API
spring.cloud.gateway.routes[3].id = backend-appointment-service-api
spring.cloud.gateway.routes[3].uri = lb://backend-appointment-service
spring.cloud.gateway.routes[3].predicates[0] = Path=/protected/appointment/**
