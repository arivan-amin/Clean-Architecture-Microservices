volumes:
  app-logs:
    driver: local

services:
  discovery-server:
    container_name: healthcare-discovery-server
    image: arivanamin/healthcare-discovery-server
    ports:
      - "8761:8761"
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/

  api-gateway:
    container_name: healthcare-api-gateway
    image: arivanamin/healthcare-api-gateway
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  tempo:
    container_name: healthcare-tempo
    image: grafana/tempo:2.3.0
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - "3110:3100"  # Tempo
      - "9411:9411" # zipkin

  loki:
    container_name: healthcare-loki
    image: grafana/loki:main
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"

  promtail:
    container_name: healthcare-promtail
    image: grafana/promtail:2.8.5
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yml
      - app-logs:/logs
      - ${HOME}/Apps/Healthcare/Logs:/local-logs
    command: -config.file=/etc/promtail/config.yml

  prometheus:
    container_name: healthcare-prometheus
    image: prom/prometheus:v2.53.2
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    container_name: healthcare-grafana
    image: grafana/grafana:11.1.4
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"

  # Kafka
  zookeeper:
    container_name: healthcare-zookeeper
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    container_name: healthcare-broker
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    container_name: healthcare-schema-registry
    image: confluentinc/cp-schema-registry:7.5.0
    hostname: schema-registry
    depends_on:
      - broker
    ports:
      - "8085:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081

  kafka-ui:
    container_name: healthcare-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8086:8080"
    depends_on:
      - broker
    environment:
      KAFKA_CLUSTERS_NAME: local
      KAFKA_CLUSTERS_BOOTSTRAPSERVERS: broker:29092
      DYNAMIC_CONFIG_ENABLED: 'true'

  # Services
  appointment-service:
    container_name: healthcare-appointment-service
    image: arivanamin/healthcare-appointment-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  billing-service:
    container_name: healthcare-billing-service
    image: arivanamin/healthcare-billing-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  doctor-service:
    container_name: healthcare-doctor-service
    image: arivanamin/healthcare-doctor-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  inventory-service:
    container_name: healthcare-inventory-service
    image: arivanamin/healthcare-inventory-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  lab-service:
    container_name: healthcare-lab-service
    image: arivanamin/healthcare-lab-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  medical-record-service:
    container_name: healthcare-medical-record-service
    image: arivanamin/healthcare-medical-record-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  notification-service:
    container_name: healthcare-notification-service
    image: arivanamin/healthcare-notification-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  patient-service:
    container_name: healthcare-patient-service
    image: arivanamin/healthcare-patient-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  pharmacy-service:
    container_name: healthcare-pharmacy-service
    image: arivanamin/healthcare-pharmacy-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  prescription-service:
    container_name: healthcare-prescription-service
    image: arivanamin/healthcare-prescription-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  radiology-service:
    container_name: healthcare-radiology-service
    image: arivanamin/healthcare-radiology-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  reporting-service:
    container_name: healthcare-report-service
    image: arivanamin/healthcare-report-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  security-service:
    container_name: healthcare-security-service
    image: arivanamin/healthcare-security-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  staff-service:
    container_name: healthcare-staff-service
    image: arivanamin/healthcare-staff-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server

  surgery-service:
    container_name: healthcare-surgery-service
    image: arivanamin/healthcare-surgery-service
    env_file:
      - .env
    volumes:
      - app-logs:/root/Apps/Healthcare/Logs/
    depends_on:
      - discovery-server
